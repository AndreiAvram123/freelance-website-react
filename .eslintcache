[{"/Users/andreia/projects/freelance-website/src/components/Navigation.js":"1","/Users/andreia/projects/freelance-website/src/repositories/AuthRepository.ts":"2","/Users/andreia/projects/freelance-website/src/repositories/ProductRepository.ts":"3","/Users/andreia/projects/freelance-website/src/repositories/UserManger.js":"4","/Users/andreia/projects/freelance-website/src/pages/Register.tsx":"5","/Users/andreia/projects/freelance-website/src/Utils.ts":"6","/Users/andreia/projects/freelance-website/src/components/Product.tsx":"7","/Users/andreia/projects/freelance-website/src/AllProducts.tsx":"8","/Users/andreia/projects/freelance-website/src/components/SideDrawer.tsx":"9","/Users/andreia/projects/freelance-website/src/App.tsx":"10","/Users/andreia/projects/freelance-website/src/pages/Admin.tsx":"11","/Users/andreia/projects/freelance-website/src/pages/ExpandedProduct.tsx":"12","/Users/andreia/projects/freelance-website/src/components/CarouselImages.tsx":"13","/Users/andreia/projects/freelance-website/src/LiveSearch.ts":"14","/Users/andreia/projects/freelance-website/src/utils/ImageUtils.ts":"15","/Users/andreia/projects/freelance-website/src/utils/ApiConstants.ts":"16","/Users/andreia/projects/freelance-website/src/pages/Profile.tsx":"17","/Users/andreia/projects/freelance-website/src/utils/UserManager.ts":"18","/Users/andreia/projects/freelance-website/src/pages/Cart.tsx":"19","/Users/andreia/projects/freelance-website/src/pages/CartItem.tsx":"20","/Users/andreia/projects/freelance-website/src/pages/CartProducts.tsx":"21","/Users/andreia/projects/freelance-website/src/contexts/CartContext.ts":"22","/Users/andreia/projects/freelance-website/src/index.js":"23","/Users/andreia/projects/freelance-website/src/components/StorageHandler.ts":"24","/Users/andreia/projects/freelance-website/src/components/AddProductModal.tsx":"25","/Users/andreia/projects/freelance-website/src/components/ModifyProductModal.tsx":"26","/Users/andreia/projects/freelance-website/src/pages/Home.tsx":"27","/Users/andreia/projects/freelance-website/src/components/RightActionsToolbar.tsx":"28","/Users/andreia/projects/freelance-website/src/pages/SignIn.tsx":"29"},{"size":2755,"mtime":1606168840650,"results":"30","hashOfConfig":"31"},{"size":1947,"mtime":1606233510855,"results":"32","hashOfConfig":"33"},{"size":4512,"mtime":1606690638080,"results":"34","hashOfConfig":"33"},{"size":68,"mtime":1606168840647,"results":"35","hashOfConfig":"33"},{"size":7439,"mtime":1606768034610,"results":"36","hashOfConfig":"33"},{"size":249,"mtime":1606265414709,"results":"37","hashOfConfig":"33"},{"size":1754,"mtime":1606669173689,"results":"38","hashOfConfig":"33"},{"size":3259,"mtime":1606431609934,"results":"39","hashOfConfig":"33"},{"size":2028,"mtime":1606765254846,"results":"40","hashOfConfig":"33"},{"size":4207,"mtime":1606768841094,"results":"41","hashOfConfig":"33"},{"size":360,"mtime":1606670984009,"results":"42","hashOfConfig":"33"},{"size":1973,"mtime":1606764653746,"results":"43","hashOfConfig":"33"},{"size":2025,"mtime":1606500161145,"results":"44","hashOfConfig":"33"},{"size":2135,"mtime":1606431259761,"results":"45","hashOfConfig":"33"},{"size":1021,"mtime":1606407217954,"results":"46","hashOfConfig":"33"},{"size":162,"mtime":1606490816208,"results":"47","hashOfConfig":"33"},{"size":313,"mtime":1606524392964,"results":"48","hashOfConfig":"33"},{"size":84,"mtime":1606524451610,"results":"49","hashOfConfig":"33"},{"size":3123,"mtime":1606740255459,"results":"50","hashOfConfig":"33"},{"size":2752,"mtime":1606736201825,"results":"51","hashOfConfig":"33"},{"size":601,"mtime":1606743615210,"results":"52","hashOfConfig":"33"},{"size":356,"mtime":1606737346806,"results":"53","hashOfConfig":"33"},{"size":199,"mtime":1606155247116,"results":"54","hashOfConfig":"33"},{"size":835,"mtime":1606734762220,"results":"55","hashOfConfig":"33"},{"size":2931,"mtime":1606670876542,"results":"56","hashOfConfig":"33"},{"size":2894,"mtime":1606692981506,"results":"57","hashOfConfig":"33"},{"size":2518,"mtime":1606766468518,"results":"58","hashOfConfig":"33"},{"size":1627,"mtime":1606767875183,"results":"59","hashOfConfig":"33"},{"size":4642,"mtime":1606344934772,"results":"60","hashOfConfig":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"ddhbc6",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"hcz9hf",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andreia/projects/freelance-website/src/components/Navigation.js",["129","130","131","132","133","134","135","136","137"],"import {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport {deleteUser} from \"../repositories/UserManger\";\n\n\nexport default function Navigation (){\n    return (\n        <header>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"#\">AllProducts <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"#\">Link</a>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\n                               data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Dropdown\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                <a className=\"dropdown-item\" href=\"#\">Action</a>\n                                <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                                <div className=\"dropdown-divider\"></div>\n                                <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                            </div>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\n                        </li>\n                    </ul>\n                    <form className=\"form-inline my-2 my-lg-0\">\n                        <Button variant=\"contained\" color=\"primary\"\n                         onClick={()=> {\n                             deleteUser()\n                             window.location.reload()\n                         }}\n                        >\n                            Sign out\n                        </Button>\n                    </form>\n                </div>\n            </nav>\n        </header>\n    )\n}","/Users/andreia/projects/freelance-website/src/repositories/AuthRepository.ts",[],["138","139"],"/Users/andreia/projects/freelance-website/src/repositories/ProductRepository.ts",[],"/Users/andreia/projects/freelance-website/src/repositories/UserManger.js",[],"/Users/andreia/projects/freelance-website/src/pages/Register.tsx",[],"/Users/andreia/projects/freelance-website/src/Utils.ts",[],"/Users/andreia/projects/freelance-website/src/components/Product.tsx",["140","141"],"\n// @ts-ignore\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {ProductModel} from '../repositories/ProductRepository'\nimport {BASE_URL_IMAGES} from \"../utils/ApiConstants\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        marginTop: 20\n    },\n});\n\n function Product(product : ProductModel) {\n\n    const classes = useStyles();\n\n     let imageURL = \"\";\n     if(product.images[0]?.imageURl){\n       imageURL = BASE_URL_IMAGES + product.images[0].imageURl\n\n    }\n    return (\n        <Card className={classes.root}\n           onClick= {()=> {window.location.href = \"/product/\" + product.productID }}\n        >\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt={product.name}\n                    height=\"200\"\n                    image= {imageURL}\n                    title= {product.name}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {product.name}\n                    </Typography>\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                        {\"£\" + product.price }\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n\n}\nexport default Product",["142","143"],"/Users/andreia/projects/freelance-website/src/AllProducts.tsx",["144"],"/Users/andreia/projects/freelance-website/src/components/SideDrawer.tsx",[],"/Users/andreia/projects/freelance-website/src/App.tsx",[],"/Users/andreia/projects/freelance-website/src/pages/Admin.tsx",[],"/Users/andreia/projects/freelance-website/src/pages/ExpandedProduct.tsx",["145","146"],"import React, {useContext, useEffect, useState} from \"react\";\nimport CarouselImages from \"../components/CarouselImages\";\nimport {Typography} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport {fetchProduct, ProductModel} from \"../repositories/ProductRepository\";\nimport {persistItem} from \"../components/StorageHandler\";\nimport CartContext from \"../contexts/CartContext\";\nimport ModifyProductModal from \"../components/ModifyProductModal\";\nimport SuccessSnackbar from \"../components/SuccessSnackbar\";\n\nexport default function ExpandedProduct(){\n\n    const context = useContext(CartContext)\n    let initial:ProductModel = {\n        productID : 0,\n        name : \"\",\n        price: 0,\n        images: []\n    }\n    const [product, setProduct] = useState<ProductModel>(initial)\n\n    useEffect(()=>{\n        const productID = window.location.href.substring(window.location.href.lastIndexOf('/') + 1)\n        if(!isNaN(Number(productID))){\n            fetchProduct(Number(productID)).then((result)=>{\n                let data = result.data\n                setProduct(data)\n            }).catch(error=>{\n                console.log(error)\n            })\n        }else{\n\n        }\n    },[])\n\n\n    return (\n        <div className={\"row\"}>\n          <CarouselImages  images={ product !== undefined ?product.images : []} />\n    <div className={\"col\"}>\n        <Typography\n            variant=\"h3\"\n        >\n            {product?.name}\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={()=>{\n            context.addProduct(product.productID)\n        }}>\n            Add to basket\n        </Button>\n        <div className={\"mt-5\"}>\n        <Button variant=\"contained\" color=\"primary\"  data-toggle=\"modal\" data-target=\"#modifyProductModal\">\n            Edit\n        </Button></div>\n        {\n            product !== initial &&\n            <ModifyProductModal product={product} />\n        }\n\n\n\n    </div>\n        </div>\n    )\n}","/Users/andreia/projects/freelance-website/src/components/CarouselImages.tsx",["147","148"],"import {Typography} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport {ProductImage} from \"../repositories/ProductRepository\";\nimport React from \"react\";\nimport {BASE_URL_IMAGES} from \"../utils/ApiConstants\";\n\n type props ={\n    images : Array<ProductImage>\n}\n\nexport default function CarouselImages (props: props){\n\n    let carouselStyle = {\n        maxWidth : \"60%\",\n        marginLeft: \"10rem\"\n    }\n\n    let imagesItems = props.images.map((productImage,index)=>{\n        return ( <div className= {index ===0 ? \"carousel-item active\" : \"carousel-item\"} key={index + \"image\"}>\n                <img className=\"d-block w-100\" src={BASE_URL_IMAGES + productImage.imageURl} alt=\"First slide\"/>\n            </div>)\n\n    })\n\n    let indicatorItems = props.images.map((product,index)=>{\n         return ( <li data-target=\"#carouselExampleIndicators\" data-slide-to={index} className={index ===0 ? \"active\" : \"\"}/>)\n    })\n\n\n    return (\n            <div className={\"col\"}>\n                <div id=\"carouselExampleControls\" className=\"carousel slide\" style={carouselStyle}  data-ride=\"carousel\">\n                    <ol className=\"carousel-indicators\">\n                        {indicatorItems}\n                    </ol>\n                    <div className=\"carousel-inner\">\n                        {imagesItems}\n                    </div>\n                    <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                        <span className=\"sr-only\">Previous</span>\n                    </a>\n                    <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                        <span className=\"sr-only\">Next</span>\n                    </a>\n                </div>\n            </div>\n\n    )\n}","/Users/andreia/projects/freelance-website/src/LiveSearch.ts",["149"],"import {fetchSearchSuggestions, ProductModel} from \"./repositories/ProductRepository\";\nimport {privateDecrypt} from \"crypto\";\n\nlet suggestionConstainer = document.createElement(\"div\")\nsuggestionConstainer.setAttribute(\"id\", \"autocomplete-list\");\nsuggestionConstainer.setAttribute(\"class\", \"autocomplete-items\");\n\n\nclass SuggestionFactory{\n\n    createSuggestion(product:ProductModel){\n        return  new ProductSuggestion(product).suggestionView\n    }\n}\n\nclass ProductSuggestion{\n    public suggestionView: HTMLDivElement;\n\n    constructor(product:ProductModel) {\n        let name = product.name;\n        let id = product.productID;\n\n        this.suggestionView = document.createElement(\"div\");\n        let image = document.createElement(\"img\");\n        image.className = \"postSuggestionImage\";\n        image.src = product.images[0].imageURl;\n        this.suggestionView.append(image);\n\n        this.suggestionView.innerHTML += name;\n\n        /*execute a function when someone clicks on the item value (DIV element):*/\n        this.suggestionView.addEventListener(\"click\", function (e) {\n            window.location.href = \"/product/\" + id\n        });\n    }\n}\n\nexport function performSearch(query :string){\n    if(query.trim()!== \"\") {\n        fetchSearchSuggestions(query).then(result => {\n            insertSuggestions(result.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }else{\n        clearSuggestionsList()\n    }\n}\n\n\nconst suggestionFactory = new  SuggestionFactory()\n\n\n\nfunction insertSuggestions(products : Array<ProductModel>){\n    clearSuggestionsList()\n    let searchField = document.getElementById(\"search-products-field\");\n    if(searchField?.parentNode != null){\n        //insert the suggestions postsSuggestionContainer as a child in the search field\n        searchField.parentNode.appendChild(suggestionConstainer);\n        //insert all available suggestions\n        products.forEach(product => {\n            suggestionConstainer.appendChild(suggestionFactory.createSuggestion(product));\n        });\n    }\n}\n\nfunction clearSuggestionsList() {\n    suggestionConstainer.innerHTML = \"\";\n}\n","/Users/andreia/projects/freelance-website/src/utils/ImageUtils.ts",[],"/Users/andreia/projects/freelance-website/src/utils/ApiConstants.ts",[],"/Users/andreia/projects/freelance-website/src/pages/Profile.tsx",[],"/Users/andreia/projects/freelance-website/src/utils/UserManager.ts",[],"/Users/andreia/projects/freelance-website/src/pages/Cart.tsx",["150","151"],"import React, {useContext, useEffect, useState} from 'react';\nimport CartProducts from './CartProducts';\nimport CartContext from \"../contexts/CartContext\";\nimport {fetchProduct, ProductModel} from \"../repositories/ProductRepository\";\nimport {ProductQuantity} from \"./CartItem\";\n\n\nconst Cart = () => {\n\n    const context = useContext(CartContext)\n\n    const record: { [productID:number]:number } = {}\n\n    const [cartProducts, setCartProducts] = useState(new Array<ProductQuantity>())\n\n    const [totalPrice ,setTotalPrice] = useState(0)\n\n    useEffect(()=>{\n        context.productsIDs.forEach(productID=>{\n            if(record[productID] === undefined) {\n                record[productID] = 0\n            }\n            record[productID] ++\n        })\n        for (let recordKey in record) {\n            let productID = context.productsIDs.find((productID) => productID === parseInt(recordKey))\n            if (productID !== undefined) {\n                fetchProduct(productID).then(result => {\n                    let product = result.data\n                    let quantity = record[product.productID]\n                    let cartItem: ProductQuantity = {product: product, quantity: quantity}\n                    setTotalPrice(totalPrice + product.price * quantity)\n                    setCartProducts([...cartProducts, cartItem])\n                })\n            }\n        }\n    },[])\n\n\n    return (\n        <div>\n            <div >\n                <div className=\"text-center mt-5\">\n                    <h1>Cart</h1>\n                    <p>This is the Cart Page.</p>\n                </div>\n\n                <div className=\"row no-gutters justify-content-center\">\n                    <div className=\"col-sm-9 p-3\">\n                        {\n                            context.productsIDs.length > 0 ?\n\n                            <CartProducts products={cartProducts}/> :\n                            <div className=\"p-3 text-center text-muted\">\n                                Your cart is empty\n                            </div>\n                        }\n                    </div>\n                    {\n                        context.productsIDs.length > 0 &&\n                        <div className=\"col-sm-3 p-3\">\n                            <div className=\"card card-body\">\n                                <p className=\"mb-1\">Total Items</p>\n                                <h4 className=\" mb-3 txt-right\">{context.productsIDs.length}</h4>\n                                <p className=\"mb-1\">Total Payment</p>\n                                <h3 className=\"m-0 txt-right\">{\"£\" + totalPrice}</h3>\n                                <hr className=\"my-4\"/>\n                                <div className=\"text-center\">\n                                    <button type=\"button\" className=\"btn btn-primary mb-2\" onClick={()=>{\n\n                                    }}>CHECKOUT</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    }\n                    \n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default Cart;","/Users/andreia/projects/freelance-website/src/pages/CartItem.tsx",[],"/Users/andreia/projects/freelance-website/src/pages/CartProducts.tsx",[],"/Users/andreia/projects/freelance-website/src/contexts/CartContext.ts",["152"],"/Users/andreia/projects/freelance-website/src/index.js",[],["153","154"],"/Users/andreia/projects/freelance-website/src/components/StorageHandler.ts",["155"],"/Users/andreia/projects/freelance-website/src/components/AddProductModal.tsx",[],"/Users/andreia/projects/freelance-website/src/components/ModifyProductModal.tsx",[],"/Users/andreia/projects/freelance-website/src/pages/Home.tsx",["156"],"\nimport tShirt from '../images/tShirt.png'\nexport default function Home(){\n\n    return (\n        <div>\n        <div className=\"jumbotron\">\n        <h1 className=\"display-4\">I am mercedes !!!!</h1>\n        <p className=\"lead\">This is our website and we are going to become ritch </p>\n        <hr className=\"my-4\"/>\n            <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n            <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\n        </div>\n            <div className={\"row container-categories\"}>\n                <div className={\"card card-style\"} >\n                    <img src={tShirt} className=\"card-img-top\" alt=\"...\"/>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">T-shirts</h5>\n                            <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk\n                                of the card's content.</p>\n                        </div>\n                </div>\n                <div className={\"card card-style\"} >\n                    <img src={tShirt} className=\"card-img-top\" alt=\"...\"/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Hats</h5>\n                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk\n                            of the card's content.</p>\n                    </div>\n                </div>\n                <div className={\"card card-style\"} >\n                    <img src={tShirt} className=\"card-img-top\" alt=\"...\"/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Vibrators</h5>\n                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk\n                            of the card's content.</p>\n                    </div>\n                </div>\n                <div className={\"card card-style\"} >\n                    <img src={tShirt} className=\"card-img-top\" alt=\"...\"/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Noodles</h5>\n                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk\n                            of the card's content.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n   )\n}","/Users/andreia/projects/freelance-website/src/components/RightActionsToolbar.tsx",[],"/Users/andreia/projects/freelance-website/src/pages/SignIn.tsx",[],{"ruleId":"157","severity":1,"message":"158","line":1,"column":9,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":10,"column":17,"nodeType":"163","endLine":10,"endColumn":54},{"ruleId":"161","severity":1,"message":"162","line":20,"column":29,"nodeType":"163","endLine":20,"endColumn":62},{"ruleId":"161","severity":1,"message":"162","line":23,"column":29,"nodeType":"163","endLine":23,"endColumn":62},{"ruleId":"161","severity":1,"message":"162","line":26,"column":29,"nodeType":"163","endLine":27,"endColumn":98},{"ruleId":"161","severity":1,"message":"162","line":31,"column":33,"nodeType":"163","endLine":31,"endColumn":71},{"ruleId":"161","severity":1,"message":"162","line":32,"column":33,"nodeType":"163","endLine":32,"endColumn":71},{"ruleId":"161","severity":1,"message":"162","line":34,"column":33,"nodeType":"163","endLine":34,"endColumn":71},{"ruleId":"161","severity":1,"message":"162","line":38,"column":29,"nodeType":"163","endLine":38,"endColumn":106},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":19},{"ruleId":"168","severity":1,"message":"170","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":14},{"ruleId":"164","replacedBy":"171"},{"ruleId":"166","replacedBy":"172"},{"ruleId":"168","severity":1,"message":"173","line":3,"column":30,"nodeType":"159","messageId":"160","endLine":3,"endColumn":52},{"ruleId":"168","severity":1,"message":"174","line":6,"column":9,"nodeType":"159","messageId":"160","endLine":6,"endColumn":20},{"ruleId":"168","severity":1,"message":"175","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":23},{"ruleId":"168","severity":1,"message":"176","line":1,"column":9,"nodeType":"159","messageId":"160","endLine":1,"endColumn":19},{"ruleId":"168","severity":1,"message":"170","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"168","severity":1,"message":"177","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":23},{"ruleId":"168","severity":1,"message":"178","line":4,"column":23,"nodeType":"159","messageId":"160","endLine":4,"endColumn":35},{"ruleId":"179","severity":1,"message":"180","line":37,"column":7,"nodeType":"181","endLine":37,"endColumn":9,"suggestions":"182"},{"ruleId":"168","severity":1,"message":"178","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":21},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"178","line":1,"column":9,"nodeType":"159","messageId":"160","endLine":1,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":12,"column":13,"nodeType":"163","endLine":12,"endColumn":74},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"@typescript-eslint/no-unused-vars","'CardActions' is defined but never used.","'Button' is defined but never used.",["183"],["184"],"'fetchSearchSuggestions' is defined but never used.","'persistItem' is defined but never used.","'SuccessSnackbar' is defined but never used.","'Typography' is defined but never used.","'privateDecrypt' is defined but never used.","'ProductModel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cartProducts', 'context.productsIDs', 'record', and 'totalPrice'. Either include them or remove the dependency array. You can also do a functional update 'setTotalPrice(t => ...)' if you only need 'totalPrice' in the 'setTotalPrice' call.","ArrayExpression",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [cartProducts, context.productsIDs, record, totalPrice]",{"range":"188","text":"189"},[1381,1383],"[cartProducts, context.productsIDs, record, totalPrice]"]